/*imperative program*/void main() {

	/* make hamster climb stairs */
	
	/* climb one step */
	vor();
	linksUm();
	vor();
	linksUm();
	linksUm();
	linksUm();
	
	/* climb rest of steps */
	vor();
	linksUm();
	vor();
	linksUm();
	linksUm();
	linksUm();
	vor();
	linksUm();
	vor();
	linksUm();
	linksUm();
	linksUm();
	vor();
	linksUm();
	vor();
	linksUm();
	linksUm();
	linksUm();
	vor();	
	
	/* make hamster descend stairs to the right
	(continuation of previous code) */
	
	/* descend one step */
	vor();
	linksUm();
	linksUm();
	linksUm();
	vor();
	linksUm();
	
	/* descend rest of steps */
	vor();
	linksUm();
	linksUm();
	linksUm();
	vor();
	linksUm();
	vor();
	linksUm();
	linksUm();
	linksUm();
	vor();
	linksUm();
	vor();
	linksUm();
	linksUm();
	linksUm();
	vor();

	/* make hamster climb stairs, do a 'salto'
	at the top and let it descend on the other side
	(continuation of previous code) */	
    
    /* turn around */
    linksUm();
    linksUm();
    
    /* climb one step */
    vor();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    
    /* climb other steps */
    vor();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    
    vor();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    vor();
    linksUm();
    vor();
    
    /* do a salto */
    linksUm();
    linksUm();
    linksUm();
    linksUm();
    
    /* descend stairs */
    vor();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    
    vor();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    vor();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    vor();
    linksUm();
    vor();
    linksUm();
    linksUm();
    linksUm();
    
    /* back to initial position */
    vor();
    linksUm();
    linksUm();              
    
}
